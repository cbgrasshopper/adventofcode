const input = ['RUDULRLLUULRURDDRRUDURULLLDRLRLUDDLUDUDDUDRRDUDULDUUULLRULLRLDDLDLDDRLRRRRUDLLDDUULDRLLUDDRRUURLULRRRDLLURRUUDURUDDURLUDDDLUDDUUDUURUDLRDRDRLRDRLDRUDRUUDLRDDRRURDDLRDDRRURDUDDLULLUDRURURRRLRRUDUULULULRRLDLUDUURRLLRUDLLDRDDLRRRULRUDLULDDLLLULDLRUDLLLLRDDLRDRLDRLLRDRRDLRDULULRLLLDRUDRRRUULRUULDRURLUDRURRDLLDLRDLDDDDRRLUDLRRLUUUURDRDDLRRURURRDUULLRLURLURUDDDRDURDUUDRLRLRRLDDLDLDLDDDUDDULURLDDLLRLRRDULUDDLULRLUDDLDLRULUUUDRLDRUDURLUDDRLLRUULDLRRRRDLLLLURULLRDRRUDLUULRRDLLRLRLUDLDDULLDLLRDLDLL','LLUUUUUUDUDRLRDRDLDURRRLLRRLRURLLUURRLLUDUDLULUURUUURDLUDLDDLULLRDLRUULDLRDUDURLLDDUDUDULLUDDUULLLUULRRRLULRURRDLRUDUDDURRRDRUURDURLLULLRULLDRUULLURLDRDUUDDDDDDRRLDRLRRRLULDDUURRLLLLDRURLURDRDRDURUDUURRDUDUDRLLUUDDRLUDDDRDLDLRLDRURRDLLRULDRLLURURRLUULLRLRRURDDRDRUUURUURUUUDLLRRLUDRLDLRLURLDLUDDUDDDLDUDRRLDLRURULRLLRDUULURRRULDLLLRLDDDUURRRRDULLRURRLULULDLRRUDUDDLRUURDLDUDDUDRRDLRRRDUDUUUDLLDDDDLURLURRRUUULLLULRRLLLLLLULDUUDLRUDRRDLRDUUDUDLLRLDLLRUURDUUURUUUDDLLUUDLULDURLULULUUUDRUDULLURRULRULLRDLDDU','RLUUURULLDLRLDUDRDURRDUURLLUDDDUULRRRLRLURDDRUULUDULDUUDDDDUDDDDRUDDLDUUDRUDLRRRLLRDDLLLRLLRUULRUULDDRURRLURRLRLULDDRRRDDURDDRDRDULRUDRUUDULRLLULDLRLLDRULRDDRRDDUDLRLLUDRDRRRLUDULRDLRDDURRUUDDRRUDURRUUUDDRRDUDURLUUDUDUURDDDLURLULLUULULURUDUUDRUDULLUUULURDLDUULLDDLLDULRLRLRDUUURUUDLRLDURUDRLDULLUDLDLLRDUURRDUDURLUUUDLLRRULRLULRLDLLURDURRULRLLRRDUDLLRDRRRRDLUUDRUUUDDLRLUDDDDDDRURRRUUURRDLLRURLDDLLDLRRLLLDRRULRRUDLDRDDRRLULURLLUURURURRRRUUUUURUDURLRLLLULULDLLDLRDRRULUDUDRDRRDRDRRDUDLLLRUDRUDDDULRULRRRDRLRUUUURUDURDUUULLULRUDDULDUUDLDURRD','ULRULDDLDLULLLRRRLRUDDDDDLLDDUDLRRDULUUDRDLRRURDRRLUULRURUDRRULDLLLUDRUUDULULUDDRUDDDRDURRRDRDUUURLRDULUDRDRLDRUDDLLLDRRULUDLUDLDLLRRUDUULULDLDLLUURDLDDLLUUDURLURLLLDRDLDRRLRULUURRDRULRUUURULRRUDDDDLLDLDDLLRRLRRRRDUUDUDLDRDRRURDLRURULDLRDLLLLRUDRLLRDLRLRDURDRUDURRRLRDRDLLRLUDDDDRLRLLDUURRURLUURUULUDLUURDRRUDDLUDUDDDURRDRUDRLRULDULUUUUUUDDUDRUDUUURUDRRDLUDLUUDUULUDURDLDDDLLURRURUUDUDDRRDRLLULULDRLRURRDDDRDUUURDDDRULUDRDDLDURRLDDDLRRRLDDRDURULDLUDLLLURLURRLRRULDLLDDUDRRULDRRRRLURRUULRRRUDLURDLLDLLDULUUDRRLDLLLDRLRUDLUULDLDRUDUDURDRUDRDDDLRLULLUR','LRLUUURRLRRRRRUURRLLULRLULLDLUDLUDRDDRLDLRLULLURDURLURDLLRLDUUDDURRRRLDLLRULLRLDLLUUDRLDDLLDRULDRLLRURDLRURRUDLULLRURDLURRURUDULLDRLLUUULUDRURRUUDUDULUUULRLDDULDRDLUDDUDDDLRURULLDLLLRLLUURDLRUDLLLLDLLRLRUUUDDRUUUUDLDLRDDURLDURUULLLUUDLLLLDULRRRLLDLDRRDRLUDRUDURLLUDLRLLUDUDRDDDRDLRDLRULUULDRLUDLRLDUURLRRLUDDDUUDDDUDRLDLDUDLURUULLDDDURUUULRLUDLDURUUDRDRURUDDUURDUUUDLLDLDLDURUURLLLLRURUURURULRULLRUDLRRUUUUUDRRLLRDDUURDRDRDDDUDRLURDRRRUDLLLDURDLUUDLLUDDULUUDLDUUULLDRDLRURUURRDURRDLURRRRLLUUULRDULDDLDUURRDLDLLULRRLLUDLDUDLUUL'];

const envisionedKeypad = {
  '1': { 'U': '1', 'L': '1', 'R': '2', 'D': '4', 'val': '1' },
  '2': { 'U': '2', 'L': '1', 'R': '3', 'D': '5', 'val': '2' },
  '3': { 'U': '3', 'L': '2', 'R': '3', 'D': '6', 'val': '3' },
  '4': { 'U': '1', 'L': '4', 'R': '5', 'D': '7', 'val': '4' },
  '5': { 'U': '2', 'L': '4', 'R': '6', 'D': '8', 'val': '5' },
  '6': { 'U': '3', 'L': '5', 'R': '6', 'D': '9', 'val': '6' },
  '7': { 'U': '4', 'L': '7', 'R': '8', 'D': '7', 'val': '7' },
  '8': { 'U': '5', 'L': '7', 'R': '9', 'D': '8', 'val': '8' },
  '9': { 'U': '6', 'L': '8', 'R': '9', 'D': '9', 'val': '9' }
}

const actualKeypad = {
  '1': { 'U': '1', 'L': '1', 'R': '1', 'D': '3', 'val': '1' },
  '2': { 'U': '2', 'L': '2', 'R': '3', 'D': '6', 'val': '2' },
  '3': { 'U': '1', 'L': '2', 'R': '4', 'D': '7', 'val': '3' },
  '4': { 'U': '4', 'L': '3', 'R': '4', 'D': '8', 'val': '4' },
  '5': { 'U': '5', 'L': '5', 'R': '6', 'D': '5', 'val': '5' },
  '6': { 'U': '2', 'L': '5', 'R': '7', 'D': 'A', 'val': '6' },
  '7': { 'U': '3', 'L': '6', 'R': '8', 'D': 'B', 'val': '7' },
  '8': { 'U': '4', 'L': '7', 'R': '9', 'D': 'C', 'val': '8' },
  '9': { 'U': '9', 'L': '8', 'R': '9', 'D': '9', 'val': '9' },
  'A': { 'U': '6', 'L': 'A', 'R': 'B', 'D': 'A', 'val': 'A' },
  'B': { 'U': '7', 'L': 'A', 'R': 'C', 'D': 'D', 'val': 'B' },
  'C': { 'U': '8', 'L': 'B', 'R': 'C', 'D': 'C', 'val': 'C' },
  'D': { 'U': 'B', 'L': 'D', 'R': 'D', 'D': 'D', 'val': 'D' }
}

const codeForPad = pad => {
  let code = '';
  for (let line of input) {
    let currentKey = pad['5'];
    for (let move of line.split('')) {
      currentKey = pad[currentKey[move]];
    }
    code += currentKey.val;
  }
  return code;
}

console.log(codeForPad(envisionedKeypad));
console.log(codeForPad(actualKeypad));